version: 2

jobs:
  deploy:
    machine:
      enabled: true
    steps:
    - run:
        name: Deploy Over SSH
        command: |
          ssh $SSH_USER@$SSH_HOST "./release"
  check-composer-installation:
    docker:
    - image: circleci/php:7.1-apache-node-browsers
    - image: circleci/mysql:5.7
      environment:
        MYSQL_PASSWORD: mage
        MYSQL_USER: mage
        MYSQL_DATABASE: magento
        MYSQL_ROOT_PASSWORD: docker
    environment:
      MAGENTO_VERSION: "2.2.5"
    working_directory: ~/tnw_extension
    steps:
    - run:
        name: Install System Package
        command: |
          sudo apt-get update
          sudo apt install -y libicu-dev libxml2-dev libxslt1-dev zlib1g-dev libmcrypt-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev
    - run:
        name: Install PHP extension
        command: |
          sudo docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
          sudo docker-php-ext-install -j$(nproc) intl soap xsl zip mcrypt pdo pdo_mysql gd gettext mbstring bcmath
    - run:
        name: Configure PHP
        command: |
          echo "memory_limit = 2G" | sudo tee --append /usr/local/etc/php/conf.d/memory.ini
          php -i
    - run:
        name: Permissions
        command: |
          cd /var/www/
          sudo chown -R circleci:circleci html
    - run:
        name: Get Magento Code Quality Tool
        command: |
          cd /var/www/html/
          git clone https://github.com/magento/marketplace-eqp magento-coding-standard
          cd magento-coding-standard
          composer install
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
    - run:
        name: Installing Magento CE
        command: |
          cd /var/www/html/
          wget https://github.com/magento/magento2/archive/$MAGENTO_VERSION.tar.gz -O - | tar -xz
          cd magento2-$MAGENTO_VERSION
          composer install --prefer-dist
          ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
          ./bin/magento --version
    - run:
        name: Configure our repository
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
          composer config --global repositories.powersync composer https://dist.powersync.biz

    - run:
        name: Install the Extension
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          for package in $PACKAGES_NAME; do
            NEW_MODULE_VERSION=(`composer show -al $package |grep '^latest '|awk '{print $3}'|sed 's/,//'`);
            composer require $package=$NEW_MODULE_VERSION
          done

    - run:
        name: Upgrade the Extension
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          rm -rf ./generated/*
          ./bin/magento setup:upgrade
    - run:
        name: Compile the Code
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          php bin/magento setup:di:compile
          php bin/magento deploy:mode:set developer

  update-wiki:
    docker:
    - image: circleci/php:7.1-apache-node-browsers
    steps:
    - run:
        name: Prepare for wiki update
        command: |
          mkdir -p ~/.composer/
          echo '{}'>~/.composer/composer.json
          composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
          composer config --global repositories.powersync composer https://dist.powersync.biz
    - run:
        name: Push changes to wiki
        command: |
          cd ~/.composer/

          for package in $PACKAGES_NAME; do

            NEW_MODULE_VERSION=(`composer show -al $package |grep '^latest '|awk '{print $3}'|sed 's/,//'`);
            PAGE_TITLE='_'
            PAGE_TITLE+=`echo "$package" | sed 's/\//_/'`

            PAGE_SEARCH_DATA=`curl -u $JIRA_LOGIN:$JIRA_TOKEN -X GET "https://technweb.atlassian.net/wiki/rest/api/content?title=$PAGE_TITLE&limit=1&expand=version.number,body.view,body.storage"`

            PAGE_ID=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].id'`
            PAGE_VERSION=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].version.number'`
            PAGE_CURRENT_BODY_STORAGE=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].body.storage.value'`


            PAGE_NEW_BODY_STORAGE=`echo $PAGE_CURRENT_BODY_STORAGE|sed "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$NEW_MODULE_VERSION/g"|sed 's/\"/\\\"/g'`

            ((PAGE_VERSION++))

            POST_DATA="{
                \"id\": $PAGE_ID,
                \"type\": \"page\",
                \"title\": \"$PAGE_TITLE\",
                \"body\": {
                  \"storage\": {
                    \"value\": \"$PAGE_NEW_BODY_STORAGE\",
                    \"representation\": \"storage\"
                  }
                },
                \"version\": {
                  \"number\": $PAGE_VERSION
                }
              }"

            curl --request PUT \
              --url "https://technweb.atlassian.net/wiki/rest/api/content/$PAGE_ID" \
              --user "$JIRA_LOGIN:$JIRA_TOKEN" \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --data "$POST_DATA"

          done

  m225_php71: &php71-base
    docker:
    - image: circleci/php:7.1-apache-node-browsers
    - image: circleci/mysql:5.7
      environment:
        MYSQL_PASSWORD: mage
        MYSQL_USER: mage
        MYSQL_DATABASE: magento
        MYSQL_ROOT_PASSWORD: docker
    environment:
      MAGENTO_VERSION: "2.2.5"
    working_directory: ~/tnw_extension/
    steps:
    - checkout
    - run:
        name: Checkout related modules
        command: |
          mkdir -p ~/tnw_extension/modules
          cd ~/tnw_extension/modules
          for moduleName in $MODULES_NAME; do
            git clone git@github.com:PowerSync/TNW_$moduleName.git $moduleName
            cd ~/tnw_extension/modules/$moduleName
            set +e
            branchExists=(`git branch -a|grep $CIRCLE_BRANCH`)
            set -e
            if test -z "$branchExists"
            then
              git checkout develop;
            else
              git checkout $CIRCLE_BRANCH;
            fi
            cd ~/tnw_extension/modules
          done

    - run:
        name: Install System Package
        command: |
          sudo apt-get update
          sudo apt install -y libicu-dev libxml2-dev libxslt1-dev zlib1g-dev libmcrypt-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev
    - run:
        name: Install PHP extension
        command: |
          sudo docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
          sudo docker-php-ext-install -j$(nproc) intl soap xsl zip mcrypt pdo pdo_mysql gd gettext mbstring bcmath
    - run:
        name: Configure PHP
        command: |
          echo "memory_limit = 2G" | sudo tee --append /usr/local/etc/php/conf.d/memory.ini
          php -i
    - run:
        name: Permissions
        command: |
          cd /var/www/
          sudo chown -R circleci:circleci html
    - run:
        name: Get Magento Code Quality Tool
        command: |
          cd /var/www/html/
          git clone https://github.com/magento/marketplace-eqp magento-coding-standard
          cd magento-coding-standard
          composer install
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
    - run:
        name: Installing Magento CE
        command: |
          cd /var/www/html/
          wget https://github.com/magento/magento2/archive/$MAGENTO_VERSION.tar.gz -O - | tar -xz
          cd magento2-$MAGENTO_VERSION
          composer install --prefer-dist
          ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
          ./bin/magento --version
    - run:
        name: Copy the Extension Files
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          mkdir -p ./app/code/TNW
          cp -R ~/tnw_extension/modules/* ./app/code/TNW
          ls -la ./app/code/TNW
    - run:
        name: Install the Extension
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          rm -rf ./generated/*
          composer require tnw/soap-client
          ./bin/magento module:status
          ./bin/magento module:enable --all
          ./bin/magento setup:upgrade
    - run:
        name: Compile the Code
        command: |
          cd /var/www/html/magento2-$MAGENTO_VERSION
          ./bin/magento setup:di:compile
          php bin/magento deploy:mode:set developer
    - run:
        name: Installing Magento EE
        command: |
          cd /var/www/html/
          composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
          composer create-project -s RC --repository-url=https://repo.magento.com/ magento/project-enterprise-edition magento2-ee-$MAGENTO_VERSION $MAGENTO_VERSION
          cd magento2-ee-$MAGENTO_VERSION
          ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwe_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
          ./bin/magento --version
    - run:
        name: Copy the Extension Files
        command: |
          cd /var/www/html/magento2-ee-$MAGENTO_VERSION
          mkdir -p ./app/code/TNW
          cp -R ~/tnw_extension/modules/* ./app/code/TNW
          ls -la ./app/code/TNW
    - run:
        name: Install the Extension
        command: |
          cd /var/www/html/magento2-ee-$MAGENTO_VERSION
          rm -rf ./generated/*
          composer require tnw/soap-client
          ./bin/magento module:status
          ./bin/magento module:enable --all
          ./bin/magento setup:upgrade
    - run:
        name: Compile the Code
        command: |
          cd /var/www/html/magento2-ee-$MAGENTO_VERSION
          ./bin/magento setup:di:compile
          php bin/magento deploy:mode:set developer
    - run:
        name: Run Magento Coding Standard
        command: |
          /var/www/html/magento-coding-standard/vendor/bin/phpcs $CIRCLE_WORKING_DIRECTORY --standard=MEQP2 --severity=10 --extensions=php,phtml
    # Need to FIX unit tests
    #- run:
    #    name: Run Unit Test
    #    command: |
    #      cd /var/www/html/magento2-$MAGENTO_VERSION
    #      ./bin/magento dev:tests:run -c'--filter=TNW' unit
  m224_php71:
    <<: *php71-base
    environment:
      MAGENTO_VERSION: "2.2.4"
  m223_php71:
    <<: *php71-base
    environment:
      MAGENTO_VERSION: "2.2.3"
  m222_php71:
    <<: *php71-base
    environment:
      MAGENTO_VERSION: "2.2.2"
  m221_php71:
    <<: *php71-base
    environment:
      MAGENTO_VERSION: "2.2.1"
  m224_php70: &php70-base
    <<: *php71-base
    docker:
    - image: circleci/php:7.0-apache-node-browsers
    - image: circleci/mysql:5.7
      environment:
        MYSQL_PASSWORD: mage
        MYSQL_USER: mage
        MYSQL_DATABASE: magento
        MYSQL_ROOT_PASSWORD: docker
    environment:
      MAGENTO_VERSION: "2.2.4"
  m223_php70:
    <<: *php70-base
    environment:
      MAGENTO_VERSION: "2.2.3"
  m222_php70:
    <<: *php70-base
    environment:
      MAGENTO_VERSION: "2.2.2"
  m221_php70:
    <<: *php70-base
    environment:
      MAGENTO_VERSION: "2.2.1"
  m225_php70:
    <<: *php70-base
    environment:
      MAGENTO_VERSION: "2.2.5"

workflows:
  version: 2

  test-deploy-wiki:
    jobs:
    - m225_php71:
        context: powersync
        filters:
          branches:
            only: /.*/
    - m224_php71:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m223_php71:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m222_php71:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m221_php71:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m225_php70:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m224_php70:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m223_php70:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m222_php70:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - m221_php70:
        context: powersync
        filters:
          branches:
            only:
            - develop
            - master
            - /^hotfix*/
            - /^release*/
    - deploy:
        context: powersync
        requires:
        - m225_php71
        - m224_php71
        - m223_php71
        - m222_php71
        - m221_php71
        - m225_php70
        - m224_php70
        - m223_php70
        - m222_php70
        - m221_php70
        filters:
          branches:
            only: master

    - check-composer-installation:
        context: powersync
        requires:
        - deploy

    - update-wiki:
        context: powersync
        requires:
        - check-composer-installation
