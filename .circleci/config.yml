version: 2

jobs:
  deploy: &base-deploy
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "./release"

  marketplace-submit: &base-marketplace-submit
    docker:
      - image: circleci/php:7.1-apache-stretch-node-browsers
    working_directory: ~/tnw_extension/
    steps:
      - checkout
      - run:
          name: Submit code to Magento Marketplace
          command: |
            cd ~/tnw_extension/
            cd .circleci
            chmod +x submit_code.sh
            ./submit_code.sh

  tag-release: &base-tag-release
    machine:
      image: ubuntu-2004:202201-02
    working_directory: ~/tnw_extension/
    steps:
      - checkout
      - run:
          name: Tag new release
          command: |
            cd ~/tnw_extension/
            cd .circleci
            chmod +x git_release.sh
            ./git_release.sh

  m235-commerce-php73: &base-image235
    docker:
      - image: powersync/magento-builds:m235-commerce-php73
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: circleci/mysql:5.7
        environment:
          MYSQL_PASSWORD: mage
          MYSQL_USER: mage
          MYSQL_DATABASE: magento
          MYSQL_ROOT_PASSWORD: docker
    working_directory: ~/tnw_extension
    steps:
      - checkout
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Installing Magento
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
            ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
            ./bin/magento --version
      - run:
          name: Checkout related modules
          command: |
            cd /var/www/html/magento/
            for moduleName in $MODULES_NAME; do
              composer config repositories.TNW_$moduleName git git@github.com:PowerSync/TNW_$moduleName.git

              moduleNameLower=(`echo $moduleName| tr '[:upper:]' '[:lower:]'`)

              set +e
                branchExists=(`composer info -a tnw/$moduleNameLower|grep "versions : .*dev-$CIRCLE_BRANCH[^0-9a-zA-Z-]"`)
              set -e

              COMPOSER_BRANCH="dev-"

              if test -z "$branchExists"
              then
                COMPOSER_BRANCH="${COMPOSER_BRANCH}develop"
              else
                COMPOSER_BRANCH="${COMPOSER_BRANCH}${CIRCLE_BRANCH}"
              fi

              composer require --prefer-source tnw/${moduleNameLower}:"${COMPOSER_BRANCH}"

              COMPOSER_TAG=$(grep -o '^ *"version": *"[0-9\.]*"' vendor/tnw/${moduleNameLower}/composer.json|awk '{print $2}'|sed -e 's/"\(.*\)"/\1/g')

              composer require --no-update --prefer-source tnw/${moduleNameLower}:"${COMPOSER_BRANCH} as ${COMPOSER_TAG}"
            done

      - run:
          name: Install the Extension
          command: |
            cd /var/www/html/magento
            rm -rf ./generated/*
            ./bin/magento module:status
            ./bin/magento module:enable --all
            ./bin/magento setup:upgrade
      - run:
          name: Compile the Code
          command: |
            cd /var/www/html/magento
            php bin/magento setup:di:compile
            php bin/magento deploy:mode:set developer
  m235-open_source-php73:
    <<: *base-image235
    docker:
      - image: powersync/magento-builds:m235-open_source-php73
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: circleci/mysql:5.7
        environment:
          MYSQL_PASSWORD: mage
          MYSQL_USER: mage
          MYSQL_DATABASE: magento
          MYSQL_ROOT_PASSWORD: docker
  m243-commerce-php74: &base-image243
    docker:
      - image: powersync/magento-builds:m243-commerce-php74
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: circleci/mysql:5.7
        environment:
          MYSQL_PASSWORD: mage
          MYSQL_USER: mage
          MYSQL_DATABASE: magento
          MYSQL_ROOT_PASSWORD: docker
    working_directory: ~/tnw_extension
    steps:
      - checkout
      - run:
          name: Reinstall Composer
          command: |
            cd ~
            curl -sS https://getcomposer.org/installer -o composer-setup.php
            sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
            cd /var/www/html/magento/
            composer --no-plugins config allow-plugins true
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Installing Magento
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
            ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
            ./bin/magento --version
      - run:
          name: Checkout related modules
          command: |
            cd /var/www/html/magento/

            for moduleName in $MODULES_NAME; do
              composer config repositories.TNW_$moduleName git git@github.com:PowerSync/TNW_$moduleName.git
              moduleNameLower=(`echo $moduleName| tr '[:upper:]' '[:lower:]'`)
              set +e
                branchExists=(`composer info -a tnw/$moduleNameLower|grep "versions : .*dev-$CIRCLE_BRANCH[^0-9a-zA-Z-]"`)
              set -e
              COMPOSER_BRANCH="dev-"
              if test -z "$branchExists"
              then
                COMPOSER_BRANCH="${COMPOSER_BRANCH}develop"
              else
                COMPOSER_BRANCH="${COMPOSER_BRANCH}${CIRCLE_BRANCH}"
              fi
              COMPOSER_MEMORY_LIMIT=-1 composer require --with-all-dependencies --prefer-source tnw/${moduleNameLower}:"${COMPOSER_BRANCH}"
              COMPOSER_TAG=$(grep -o '^ *"version": *"[0-9\.]*"' vendor/tnw/${moduleNameLower}/composer.json|awk '{print $2}'|sed -e 's/"\(.*\)"/\1/g')
              COMPOSER_MEMORY_LIMIT=-1 composer require --no-update --prefer-source tnw/${moduleNameLower}:"${COMPOSER_BRANCH} as ${COMPOSER_TAG}"
            done
      - run:
          name: Install the Extension
          command: |
            cd /var/www/html/magento
            rm -rf ./generated/*
            ./bin/magento module:status
            ./bin/magento module:enable --all
            ./bin/magento setup:upgrade
      - run:
          name: Compile the Code
          command: |
            cd /var/www/html/magento
            php bin/magento setup:di:compile
            php bin/magento deploy:mode:set developer
  m243-open_source-php74:
    <<: *base-image243
    docker:
      - image: powersync/magento-builds:m243-open_source-php74
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: circleci/mysql:5.7
        environment:
          MYSQL_PASSWORD: mage
          MYSQL_USER: mage
          MYSQL_DATABASE: magento
          MYSQL_ROOT_PASSWORD: docker

  magento-coding-standard:
    <<: *base-image243
    steps:
      - checkout
      - run:
          name: Update coding standarts
          command: |
            cd /var/www/html/magento-coding-standard
            composer update
      - run:
          name: Run Magento Coding Standard
          command: |
            /var/www/html/magento-coding-standard/vendor/bin/phpcs $CIRCLE_WORKING_DIRECTORY --standard=MEQP2 --severity=10 --extensions=php,phtml
  check-composer-installation:
    <<: *base-image243
    steps:
      - checkout
      - run:
          name: Reinstall Composer
          command: |
            cd ~
            curl -sS https://getcomposer.org/installer -o composer-setup.php
            sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
            cd /var/www/html/magento/
            composer --no-plugins config allow-plugins true
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Installing Magento
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
            ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
            ./bin/magento --version
      - run:
          name: Configure our repository
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
            composer config --global repositories.powersync composer https://dist.powersync.biz

      - run:
          name: Checkout related modules
          command: |
            set -x
            cd /var/www/html/magento/
            MODULE_NAME=$(grep -o '^ *"name": *"[a-zA-Z\/]*"' ~/tnw_extension/composer.json |  awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
            for package in $PACKAGES_NAME; do

              if [[ "$package" == "$MODULE_NAME" ]];
              then
                NEW_MODULE_VERSION=$(grep -o '^ *"version": *"[0-9\.]*"' ~/tnw_extension/composer.json | awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
              else
                NEW_MODULE_VERSION=(`composer show -al $package -f json|jq -r '.versions[]'|grep 2.7.\[0-9\]\*|head -n1`);
              fi
              composer require $package=$NEW_MODULE_VERSION
            done

      - run:
          name: Install the Extension
          command: |
            cd /var/www/html/magento
            rm -rf ./generated/*
            ./bin/magento module:status
            ./bin/magento module:enable --all
            ./bin/magento setup:upgrade
      - run:
          name: Compile the Code
          command: |
            cd /var/www/html/magento
            php bin/magento setup:di:compile
            php bin/magento deploy:mode:set developer

  update-wiki:
    docker:
      - image: circleci/php:7.1-apache-stretch-node-browsers
    steps:
      - checkout
      - run:
          name: Prepare for wiki update
          command: |
            mkdir -p ~/.composer/
            echo '{}'>~/.composer/composer.json
            composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
            composer config --global repositories.powersync composer https://dist.powersync.biz
      - run:
          name: Push changes to wiki
          command: |
            set -x
            cd ~/.composer/
            MODULE_NAME=$(grep -o '^ *"name": *"[a-zA-Z\/]*"' ~/project/composer.json |  awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
            for package in $PACKAGES_NAME; do

              if [[ "$package" == "$MODULE_NAME" ]];
              then
                NEW_MODULE_VERSION=$(grep -o '^ *"version": *"[0-9\.]*"' ~/project/composer.json | awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
              else
                NEW_MODULE_VERSION=(`composer show -al $package -f json|jq -r '.versions[]'|grep 2.7.\[0-9\]\*|head -n1`);
              fi

              PAGE_TITLE='_'
              PAGE_TITLE+=`echo "$package" | sed 's/\//_/'`

              PAGE_SEARCH_DATA=`curl -u $JIRA_LOGIN:$JIRA_TOKEN -X GET "https://technweb.atlassian.net/wiki/rest/api/content?title=$PAGE_TITLE&limit=1&expand=version.number,body.view,body.storage"`

              PAGE_ID=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].id'`
              PAGE_VERSION=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].version.number'`
              PAGE_CURRENT_BODY_STORAGE=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].body.storage.value'`


              PAGE_NEW_BODY_STORAGE=`echo $PAGE_CURRENT_BODY_STORAGE|sed "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$NEW_MODULE_VERSION/g"|sed 's/\"/\\\"/g'`

              ((PAGE_VERSION++))

              POST_DATA="{
                  \"id\": $PAGE_ID,
                  \"type\": \"page\",
                  \"title\": \"$PAGE_TITLE\",
                  \"body\": {
                    \"storage\": {
                      \"value\": \"$PAGE_NEW_BODY_STORAGE\",
                      \"representation\": \"storage\"
                    }
                  },
                  \"version\": {
                    \"number\": $PAGE_VERSION
                  }
                }"

              curl --request PUT \
                --url "https://technweb.atlassian.net/wiki/rest/api/content/$PAGE_ID" \
                --user "$JIRA_LOGIN:$JIRA_TOKEN" \
                --header 'Accept: application/json' \
                --header 'Content-Type: application/json' \
                --data "$POST_DATA"

            done
  m244-commerce-php81: &base-image244
    <<: *base-image243
    docker:
      - image: powersync/magento-builds:m244-commerce-php815-elastic716
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: circleci/mysql:5.7
        environment:
          MYSQL_PASSWORD: mage
          MYSQL_USER: mage
          MYSQL_DATABASE: magento
          MYSQL_ROOT_PASSWORD: docker
    steps:
      - checkout
      - run:
          name: Reinstall Composer
          command: |
            cd ~
            curl -sS https://getcomposer.org/installer -o composer-setup.php
            sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
            cd /var/www/html/magento/
            composer --no-plugins config allow-plugins true
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Installing Magento
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
            ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
            ./bin/magento --version
      - run:
          name: Checkout related modules
          command: |
            cd /var/www/html/magento/
            for moduleName in $MODULES_NAME; do
              composer config repositories.TNW_$moduleName git git@github.com:PowerSync/TNW_$moduleName.git

              moduleNameLower=(`echo $moduleName| tr '[:upper:]' '[:lower:]'`)

              set +e
                branchExists=(`composer info -a tnw/$moduleNameLower|grep "versions : .*dev-$CIRCLE_BRANCH"`)
              set -e

              COMPOSER_BRANCH="dev-"

              if test -z "$branchExists"
              then
                set +e
                branchExists=(`composer info -a tnw/$moduleNameLower|grep "versions : .*dev-develop-2\.4\.4"`)
                set -e
                if test -z "$branchExists"
                  then
                    COMPOSER_BRANCH="${COMPOSER_BRANCH}develop"
                  else
                    COMPOSER_BRANCH="${COMPOSER_BRANCH}develop-2.4.4"
                fi
              else
                COMPOSER_BRANCH="${COMPOSER_BRANCH}${CIRCLE_BRANCH}"
              fi

              composer require --prefer-source tnw/${moduleNameLower}:"${COMPOSER_BRANCH}"

              COMPOSER_TAG=$(grep -o '^ *"version": *"[0-9\.]*"' vendor/tnw/${moduleNameLower}/composer.json|awk '{print $2}'|sed -e 's/"\(.*\)"/\1/g')

              composer require --no-update --prefer-source tnw/${moduleNameLower}:"${COMPOSER_BRANCH} as ${COMPOSER_TAG}"
            done

      - run:
          name: Install the Extension
          command: |
            cd /var/www/html/magento
            rm -rf ./generated/*
            ./bin/magento module:status
            ./bin/magento module:enable --all
            ./bin/magento setup:upgrade
      - run:
          name: Compile the Code
          command: |
            cd /var/www/html/magento
            php bin/magento setup:di:compile
            php bin/magento deploy:mode:set developer
  magento-coding-standard-244:
    <<: *base-image244
    steps:
      - checkout
      - run:
          name: Update coding standarts
          command: |
            cd /var/www/html/magento-coding-standard
            composer update
      - run:
          name: Run Magento Coding Standard
          command: |
            /var/www/html/magento-coding-standard/vendor/bin/phpcs $CIRCLE_WORKING_DIRECTORY --standard=Magento2Framework --severity=10 --extensions=php,phtml
  check-composer-installation-244:
    <<: *base-image244
    steps:
      - checkout
      - run:
          name: Reinstall Composer
          command: |
            cd ~
            curl -sS https://getcomposer.org/installer -o composer-setup.php
            sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
            cd /var/www/html/magento/
            composer --no-plugins config allow-plugins true
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Installing Magento
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
            ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
            ./bin/magento --version
      - run:
          name: Configure our repository
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
            composer config --global repositories.powersync composer https://dist.powersync.biz

      - run:
          name: Checkout related modules
          command: |
            set -x
            cd /var/www/html/magento/
            MODULE_NAME=$(grep -o '^ *"name": *"[a-zA-Z\/]*"' ~/tnw_extension/composer.json |  awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
            for package in $PACKAGES_NAME; do

              if [[ "$package" == "$MODULE_NAME" ]];
              then
                NEW_MODULE_VERSION=$(grep -o '^ *"version": *"[0-9\.]*"' ~/tnw_extension/composer.json | awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
              else
                NEW_MODULE_VERSION=(`composer show -al $package -f json|jq -r '.versions[]'|grep 2.8.\[0-9\]\*|head -n1`);
              fi
              composer require $package=$NEW_MODULE_VERSION
            done

      - run:
          name: Install the Extension
          command: |
            cd /var/www/html/magento
            rm -rf ./generated/*
            ./bin/magento module:status
            ./bin/magento module:enable --all
            ./bin/magento setup:upgrade
      - run:
          name: Compile the Code
          command: |
            cd /var/www/html/magento
            php bin/magento setup:di:compile
            php bin/magento deploy:mode:set developer

  update-wiki-244:
    docker:
      - image: circleci/php:7.1-apache-stretch-node-browsers
    steps:
      - checkout
      - run:
          name: Prepare for wiki update
          command: |
            mkdir -p ~/.composer/
            echo '{}'>~/.composer/composer.json
            composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
            composer config --global repositories.powersync composer https://dist.powersync.biz
      - run:
          name: Push changes to wiki
          command: |
            set -x
            cd ~/.composer/
            MODULE_NAME=$(grep -o '^ *"name": *"[a-zA-Z\/]*"' ~/project/composer.json |  awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
            for package in $PACKAGES_NAME; do

              if [[ "$package" == "$MODULE_NAME" ]];
              then
                NEW_MODULE_VERSION=$(grep -o '^ *"version": *"[0-9\.]*"' ~/project/composer.json | awk '{print $2}' | sed -e 's/"\(.*\)"/\1/g')
              else
                NEW_MODULE_VERSION=(`composer show -al $package -f json|jq -r '.versions[]'|grep 2.8.\[0-9\]\*|head -n1`);
              fi

              PAGE_TITLE='_'
              PAGE_TITLE+=`echo "$package" | sed 's/\//_/'`
              PAGE_TITLE+='-2.4.4'

              PAGE_SEARCH_DATA=`curl -u $JIRA_LOGIN:$JIRA_TOKEN -X GET "https://technweb.atlassian.net/wiki/rest/api/content?title=$PAGE_TITLE&limit=1&expand=version.number,body.view,body.storage"`

              PAGE_ID=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].id'`
              PAGE_VERSION=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].version.number'`
              PAGE_CURRENT_BODY_STORAGE=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].body.storage.value'`


              PAGE_NEW_BODY_STORAGE=`echo $PAGE_CURRENT_BODY_STORAGE|sed "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$NEW_MODULE_VERSION/g"|sed 's/\"/\\\"/g'`

              ((PAGE_VERSION++))

              POST_DATA="{
                  \"id\": $PAGE_ID,
                  \"type\": \"page\",
                  \"title\": \"$PAGE_TITLE\",
                  \"body\": {
                    \"storage\": {
                      \"value\": \"$PAGE_NEW_BODY_STORAGE\",
                      \"representation\": \"storage\"
                    }
                  },
                  \"version\": {
                    \"number\": $PAGE_VERSION
                  }
                }"

              curl --request PUT \
                --url "https://technweb.atlassian.net/wiki/rest/api/content/$PAGE_ID" \
                --user "$JIRA_LOGIN:$JIRA_TOKEN" \
                --header 'Accept: application/json' \
                --header 'Content-Type: application/json' \
                --data "$POST_DATA"

            done

  deploy-244:
    <<: *base-deploy
    steps:
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "./release244"
  tag-release-244:
    <<: *base-tag-release
  marketplace-submit-244:
    <<: *base-marketplace-submit

workflows:
  version: 2
  test-deploy-wiki:
    jobs:
      - m235-commerce-php73:
          context: powersync
          filters:
            branches:
              ignore: /.*-2\.4\.4/
      - m235-open_source-php73:
          context: powersync
          filters:
            branches:
              ignore: /.*-2\.4\.4/
      - m243-commerce-php74:
          context: powersync
          filters:
            branches:
              ignore: /.*-2\.4\.4/
      - m243-open_source-php74:
          context: powersync
          filters:
            branches:
              ignore: /.*-2\.4\.4/
      - magento-coding-standard:
          context: powersync
          filters:
            branches:
              only: master
      - deploy:
          context: powersync
          requires:
            - tag-release
          filters:
            branches:
              only: master
      - marketplace-submit:
          context: powersync
          requires:
            - tag-release
          filters:
            branches:
              only: master
      - tag-release:
          context: powersync
          requires:
            - m235-commerce-php73
            - m235-open_source-php73
            - m243-commerce-php74
            - m243-open_source-php74
            - magento-coding-standard
          filters:
            branches:
              only: master
      - check-composer-installation:
          context: powersync
          requires:
            - deploy
          filters:
            branches:
              only: master
      - update-wiki:
          context: powersync
          requires:
            - check-composer-installation
          filters:
            branches:
              only: master

#      - m244-commerce-php81:
#          context: powersync
#          filters:
#            branches:
#              only: /.*-2\.4\.4/
      - magento-coding-standard-244:
          context: powersync
          filters:
            branches:
              only: master-2.4.4
      - deploy-244:
          context: powersync
          requires:
            - tag-release-244
          filters:
            branches:
              only: master-2.4.4
      - tag-release-244:
          context: powersync
          requires:
#            - m244-commerce-php81
            - magento-coding-standard-244
          filters:
            branches:
              only: master-2.4.4
#      - check-composer-installation-244:
#          context: powersync
#          requires:
#            - deploy-244
#          filters:
#            branches:
#              only: master-2.4.4
      - update-wiki-244:
          context: powersync
          requires:
            - deploy-244
#            - check-composer-installation-244
          filters:
            branches:
              only: master-2.4.4
      - marketplace-submit-244:
          context: powersync
          requires:
            - tag-release-244
          filters:
            branches:
              only: master-2.4.4
